scalar Date
scalar URL

type Query {
  account: Account
  plans: [Plan!]!
}

type Mutation {
  initiateEmailAuthentication(email: String!): String!

  # Used for creating a new account
  completeAccountCreation(
    token: String!, 
    code: String!, 
    username: String!,
    deviceName: String
  ): String!

  # Used for signing into an existing account 
  validateEmailAuthentication(
    token: String!, 
    code: String!,
    deviceName: String
  ): AuthenticationResult!
}

union AuthenticationResult = SuccessfulAuthentication | EmptyResponse

type SuccessfulAuthentication {
  account: Account!
  sessionToken: String!
}

type EmptyResponse {
  success: Boolean!
}

type Account {
  email: String!
  username: String!
  avatar: URL
}

type Plan {
  id: String!
  name: String!
}
